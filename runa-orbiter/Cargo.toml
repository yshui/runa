[package]
name = "runa-orbiter"
description = "Reference implementation of Wayland protocol interfaces"
repository = "https://github.com/yshui/runa"
license = "MIT OR Apache-2.0"
version = "0.0.1-alpha1"
edition = "2021"

[dependencies]
bitflags.workspace = true
dlv-list.workspace = true
dyn-clone = "1.0.9"
futures-util.workspace = true
intrusive-collections = "0.9.4"
lazy_static = "1.4.0"
runa-wayland-protocols = { version = "0.1.0", path = "../runa-wayland-protocols" }
runa-core = { version = "0.0.1-alpha1", path = "../runa-core" }
runa-wayland-types = { version = "0.1.0", path = "../runa-wayland-types" }
tracing.workspace = true
futures-channel = "0.3.25"
derivative.workspace = true
runa-io = { version = "0.0.1-alpha1", path = "../runa-io" }
memmap2 = "0.5.7"
spin = { version = "0.9.4", default-features = false, features = ["mutex", "ticket_mutex", "use_ticket_mutex"] }
libc = "0.2.137"
hashbrown.workspace = true
num-traits = "0.2.15"
async-lock = "2.6.0"
futures-core = "0.3.26"
tinyvecdeq = { version = "0.1", features = ["std"] }
enum_dispatch = "0.3.11"
thiserror.workspace = true
ordered-float.workspace = true
tinyvec = { workspace = true, features = ["alloc"] }
